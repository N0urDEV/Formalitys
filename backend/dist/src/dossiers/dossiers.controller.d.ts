import { DossiersService } from './dossiers.service';
export declare class DossiersController {
    private readonly dossiersService;
    constructor(dossiersService: DossiersService);
    createCompanyDossier(req: any): Promise<{
        id: number;
        email: string | null;
        createdAt: Date;
        updatedAt: Date;
        status: import("@prisma/client").$Enums.DossierStatus;
        currentStep: number;
        associates: import("@prisma/client/runtime/library").JsonValue | null;
        companyName: string | null;
        activities: import("@prisma/client/runtime/library").JsonValue | null;
        proposedNames: import("@prisma/client/runtime/library").JsonValue | null;
        headquarters: string | null;
        capital: number | null;
        selectedBank: string | null;
        raisonSociale: string | null;
        formeJuridique: string | null;
        nationalite: string | null;
        adresseSiege: string | null;
        villeSiege: string | null;
        professionActivite: string | null;
        telephone: string | null;
        fax: string | null;
        numeroArticleTaxeProfessionnelle: string | null;
        numeroArticleTaxeServicesCommunaux: string | null;
        numeroAffiliationCNSS: string | null;
        numeroRegistreCommerce: string | null;
        villeRegistreCommerce: string | null;
        referenceDepotDeclaration: string | null;
        dateDepotDeclaration: string | null;
        uploadedFiles: import("@prisma/client/runtime/library").JsonValue | null;
        paymentIntentId: string | null;
        paymentStatus: string | null;
        amountPaid: number | null;
        originalPrice: number | null;
        discountApplied: number;
        finalPrice: number | null;
        discountReason: string | null;
        userId: number;
    }>;
    getCompanyDossiers(req: any): Promise<{
        id: number;
        email: string | null;
        createdAt: Date;
        updatedAt: Date;
        status: import("@prisma/client").$Enums.DossierStatus;
        currentStep: number;
        associates: import("@prisma/client/runtime/library").JsonValue | null;
        companyName: string | null;
        activities: import("@prisma/client/runtime/library").JsonValue | null;
        proposedNames: import("@prisma/client/runtime/library").JsonValue | null;
        headquarters: string | null;
        capital: number | null;
        selectedBank: string | null;
        raisonSociale: string | null;
        formeJuridique: string | null;
        nationalite: string | null;
        adresseSiege: string | null;
        villeSiege: string | null;
        professionActivite: string | null;
        telephone: string | null;
        fax: string | null;
        numeroArticleTaxeProfessionnelle: string | null;
        numeroArticleTaxeServicesCommunaux: string | null;
        numeroAffiliationCNSS: string | null;
        numeroRegistreCommerce: string | null;
        villeRegistreCommerce: string | null;
        referenceDepotDeclaration: string | null;
        dateDepotDeclaration: string | null;
        uploadedFiles: import("@prisma/client/runtime/library").JsonValue | null;
        paymentIntentId: string | null;
        paymentStatus: string | null;
        amountPaid: number | null;
        originalPrice: number | null;
        discountApplied: number;
        finalPrice: number | null;
        discountReason: string | null;
        userId: number;
    }[]>;
    getCompanyDossier(id: number, req: any): Promise<{
        id: number;
        email: string | null;
        createdAt: Date;
        updatedAt: Date;
        status: import("@prisma/client").$Enums.DossierStatus;
        currentStep: number;
        associates: import("@prisma/client/runtime/library").JsonValue | null;
        companyName: string | null;
        activities: import("@prisma/client/runtime/library").JsonValue | null;
        proposedNames: import("@prisma/client/runtime/library").JsonValue | null;
        headquarters: string | null;
        capital: number | null;
        selectedBank: string | null;
        raisonSociale: string | null;
        formeJuridique: string | null;
        nationalite: string | null;
        adresseSiege: string | null;
        villeSiege: string | null;
        professionActivite: string | null;
        telephone: string | null;
        fax: string | null;
        numeroArticleTaxeProfessionnelle: string | null;
        numeroArticleTaxeServicesCommunaux: string | null;
        numeroAffiliationCNSS: string | null;
        numeroRegistreCommerce: string | null;
        villeRegistreCommerce: string | null;
        referenceDepotDeclaration: string | null;
        dateDepotDeclaration: string | null;
        uploadedFiles: import("@prisma/client/runtime/library").JsonValue | null;
        paymentIntentId: string | null;
        paymentStatus: string | null;
        amountPaid: number | null;
        originalPrice: number | null;
        discountApplied: number;
        finalPrice: number | null;
        discountReason: string | null;
        userId: number;
    }>;
    updateCompanyDossier(id: number, data: any, req: any): Promise<{
        id: number;
        email: string | null;
        createdAt: Date;
        updatedAt: Date;
        status: import("@prisma/client").$Enums.DossierStatus;
        currentStep: number;
        associates: import("@prisma/client/runtime/library").JsonValue | null;
        companyName: string | null;
        activities: import("@prisma/client/runtime/library").JsonValue | null;
        proposedNames: import("@prisma/client/runtime/library").JsonValue | null;
        headquarters: string | null;
        capital: number | null;
        selectedBank: string | null;
        raisonSociale: string | null;
        formeJuridique: string | null;
        nationalite: string | null;
        adresseSiege: string | null;
        villeSiege: string | null;
        professionActivite: string | null;
        telephone: string | null;
        fax: string | null;
        numeroArticleTaxeProfessionnelle: string | null;
        numeroArticleTaxeServicesCommunaux: string | null;
        numeroAffiliationCNSS: string | null;
        numeroRegistreCommerce: string | null;
        villeRegistreCommerce: string | null;
        referenceDepotDeclaration: string | null;
        dateDepotDeclaration: string | null;
        uploadedFiles: import("@prisma/client/runtime/library").JsonValue | null;
        paymentIntentId: string | null;
        paymentStatus: string | null;
        amountPaid: number | null;
        originalPrice: number | null;
        discountApplied: number;
        finalPrice: number | null;
        discountReason: string | null;
        userId: number;
    }>;
    deleteCompanyDossier(id: number, req: any): Promise<{
        id: number;
        email: string | null;
        createdAt: Date;
        updatedAt: Date;
        status: import("@prisma/client").$Enums.DossierStatus;
        currentStep: number;
        associates: import("@prisma/client/runtime/library").JsonValue | null;
        companyName: string | null;
        activities: import("@prisma/client/runtime/library").JsonValue | null;
        proposedNames: import("@prisma/client/runtime/library").JsonValue | null;
        headquarters: string | null;
        capital: number | null;
        selectedBank: string | null;
        raisonSociale: string | null;
        formeJuridique: string | null;
        nationalite: string | null;
        adresseSiege: string | null;
        villeSiege: string | null;
        professionActivite: string | null;
        telephone: string | null;
        fax: string | null;
        numeroArticleTaxeProfessionnelle: string | null;
        numeroArticleTaxeServicesCommunaux: string | null;
        numeroAffiliationCNSS: string | null;
        numeroRegistreCommerce: string | null;
        villeRegistreCommerce: string | null;
        referenceDepotDeclaration: string | null;
        dateDepotDeclaration: string | null;
        uploadedFiles: import("@prisma/client/runtime/library").JsonValue | null;
        paymentIntentId: string | null;
        paymentStatus: string | null;
        amountPaid: number | null;
        originalPrice: number | null;
        discountApplied: number;
        finalPrice: number | null;
        discountReason: string | null;
        userId: number;
    }>;
    createTourismDossier(req: any): Promise<{
        id: number;
        createdAt: Date;
        updatedAt: Date;
        status: import("@prisma/client").$Enums.DossierStatus;
        currentStep: number;
        uploadedFiles: import("@prisma/client/runtime/library").JsonValue | null;
        paymentIntentId: string | null;
        paymentStatus: string | null;
        amountPaid: number | null;
        originalPrice: number | null;
        discountApplied: number;
        finalPrice: number | null;
        discountReason: string | null;
        userId: number;
        ownerInfo: import("@prisma/client/runtime/library").JsonValue | null;
        establishmentInfo: import("@prisma/client/runtime/library").JsonValue | null;
        propertyDetails: import("@prisma/client/runtime/library").JsonValue | null;
        complianceAnswers: import("@prisma/client/runtime/library").JsonValue | null;
        uploadedPhotos: import("@prisma/client/runtime/library").JsonValue | null;
    }>;
    getTourismDossiers(req: any): Promise<{
        id: number;
        createdAt: Date;
        updatedAt: Date;
        status: import("@prisma/client").$Enums.DossierStatus;
        currentStep: number;
        uploadedFiles: import("@prisma/client/runtime/library").JsonValue | null;
        paymentIntentId: string | null;
        paymentStatus: string | null;
        amountPaid: number | null;
        originalPrice: number | null;
        discountApplied: number;
        finalPrice: number | null;
        discountReason: string | null;
        userId: number;
        ownerInfo: import("@prisma/client/runtime/library").JsonValue | null;
        establishmentInfo: import("@prisma/client/runtime/library").JsonValue | null;
        propertyDetails: import("@prisma/client/runtime/library").JsonValue | null;
        complianceAnswers: import("@prisma/client/runtime/library").JsonValue | null;
        uploadedPhotos: import("@prisma/client/runtime/library").JsonValue | null;
    }[]>;
    getTourismDossier(id: number, req: any): Promise<{
        id: number;
        createdAt: Date;
        updatedAt: Date;
        status: import("@prisma/client").$Enums.DossierStatus;
        currentStep: number;
        uploadedFiles: import("@prisma/client/runtime/library").JsonValue | null;
        paymentIntentId: string | null;
        paymentStatus: string | null;
        amountPaid: number | null;
        originalPrice: number | null;
        discountApplied: number;
        finalPrice: number | null;
        discountReason: string | null;
        userId: number;
        ownerInfo: import("@prisma/client/runtime/library").JsonValue | null;
        establishmentInfo: import("@prisma/client/runtime/library").JsonValue | null;
        propertyDetails: import("@prisma/client/runtime/library").JsonValue | null;
        complianceAnswers: import("@prisma/client/runtime/library").JsonValue | null;
        uploadedPhotos: import("@prisma/client/runtime/library").JsonValue | null;
    }>;
    updateTourismDossier(id: number, data: any, req: any): Promise<{
        id: number;
        createdAt: Date;
        updatedAt: Date;
        status: import("@prisma/client").$Enums.DossierStatus;
        currentStep: number;
        uploadedFiles: import("@prisma/client/runtime/library").JsonValue | null;
        paymentIntentId: string | null;
        paymentStatus: string | null;
        amountPaid: number | null;
        originalPrice: number | null;
        discountApplied: number;
        finalPrice: number | null;
        discountReason: string | null;
        userId: number;
        ownerInfo: import("@prisma/client/runtime/library").JsonValue | null;
        establishmentInfo: import("@prisma/client/runtime/library").JsonValue | null;
        propertyDetails: import("@prisma/client/runtime/library").JsonValue | null;
        complianceAnswers: import("@prisma/client/runtime/library").JsonValue | null;
        uploadedPhotos: import("@prisma/client/runtime/library").JsonValue | null;
    }>;
    deleteTourismDossier(id: number, req: any): Promise<{
        id: number;
        createdAt: Date;
        updatedAt: Date;
        status: import("@prisma/client").$Enums.DossierStatus;
        currentStep: number;
        uploadedFiles: import("@prisma/client/runtime/library").JsonValue | null;
        paymentIntentId: string | null;
        paymentStatus: string | null;
        amountPaid: number | null;
        originalPrice: number | null;
        discountApplied: number;
        finalPrice: number | null;
        discountReason: string | null;
        userId: number;
        ownerInfo: import("@prisma/client/runtime/library").JsonValue | null;
        establishmentInfo: import("@prisma/client/runtime/library").JsonValue | null;
        propertyDetails: import("@prisma/client/runtime/library").JsonValue | null;
        complianceAnswers: import("@prisma/client/runtime/library").JsonValue | null;
        uploadedPhotos: import("@prisma/client/runtime/library").JsonValue | null;
    }>;
}
